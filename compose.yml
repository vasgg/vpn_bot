services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "127.0.0.1:5678:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
  bot:
    build:
      context: .
      target: bot_image
    network_mode: host
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    volumes:
      - ./logs:/app/logs
  cron_task:
    build:
      context: .
      target: task_image
    network_mode: host
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    volumes:
      - ./logs:/app/logs
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./pgbackups:/backups
    depends_on:
      - postgres
    environment:
        POSTGRES_HOST: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_EXTRA_OPTS: "-Z1 --schema=public --blobs"
        SCHEDULE: "@daily"
        BACKUP_ON_START: TRUE
        BACKUP_KEEP_DAYS: 7
        BACKUP_KEEP_WEEKS: 4
        BACKUP_KEEP_MONTHS: 6
        HEALTHCHECK_PORT: 8080
volumes:
  pgdata:

